"""stocks

Revision ID: 06fa114f15cc
Revises: cf6734a2f551
Create Date: 2022-11-12 21:47:59.817295

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "06fa114f15cc"
down_revision = "cf6734a2f551"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "exchange",
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("suffix", sa.String(), nullable=False),
        sa.Column("utc_offset", sa.Integer(), nullable=True),
        sa.Column("open_time", sa.Time(), nullable=True),
        sa.Column("close_time", sa.Time(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "sector",
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("title_en", sa.String(), nullable=False),
        sa.Column("title_ru", sa.String(), nullable=False),
        sa.Column("logo_url", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("title_en"),
        sa.UniqueConstraint("title_ru"),
    )
    op.create_table(
        "stock_type",
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("title_en", sa.String(), nullable=False),
        sa.Column("title_ru", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "country",
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("code", sa.String(length=3), nullable=False),
        sa.Column("currency_id", sa.Integer(), nullable=False),
        sa.Column("logo_url", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["currency_id"],
            ["currency.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "industry",
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("title_en", sa.String(), nullable=False),
        sa.Column("title_ru", sa.String(), nullable=False),
        sa.Column("logo_url", sa.String(), nullable=True),
        sa.Column("sector_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["sector_id"],
            ["sector.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "city",
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("country_id", sa.Integer(), nullable=False),
        sa.Column("population", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["country_id"],
            ["country.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "stock",
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("exchange_id", sa.Integer(), nullable=False),
        sa.Column("isin", sa.String(length=12), nullable=False),
        sa.Column("ticker", sa.String(length=8), nullable=False),
        sa.Column("type_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("currency_id", sa.Integer(), nullable=False),
        sa.Column("city_id", sa.Integer(), nullable=False),
        sa.Column("sector_id", sa.Integer(), nullable=False),
        sa.Column("industry_id", sa.Integer(), nullable=False),
        sa.Column("logo_url", sa.String(), nullable=True),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("website", sa.String(), nullable=True),
        sa.Column("full_time_employees", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["city.id"],
        ),
        sa.ForeignKeyConstraint(
            ["currency_id"],
            ["currency.id"],
        ),
        sa.ForeignKeyConstraint(
            ["exchange_id"],
            ["exchange.id"],
        ),
        sa.ForeignKeyConstraint(
            ["industry_id"],
            ["industry.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sector_id"],
            ["sector.id"],
        ),
        sa.ForeignKeyConstraint(
            ["type_id"],
            ["stock_type.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("isin"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("stock")
    op.drop_table("city")
    op.drop_table("industry")
    op.drop_table("country")
    op.drop_table("stock_type")
    op.drop_table("sector")
    op.drop_table("exchange")
    # ### end Alembic commands ###
